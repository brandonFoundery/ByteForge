@{
    ViewData["Title"] = "Lead Processing Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background: linear-gradient(135deg, #0c0c0c 0%, #1a1a1a 100%);
        color: #e5e5e5;
    }
    .dashboard-container {
        min-height: 100vh;
        padding: 0;
        margin: 0;
        position: relative;
    }
    .settings-btn {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
        background: #2563eb;
        color: white;
        border: none;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        font-size: 24px;
        box-shadow: 0 4px 12px rgba(37, 99, 235, 0.4);
        transition: all 0.3s ease;
    }
    .settings-btn:hover {
        background: #1d4ed8;
        transform: scale(1.05);
        box-shadow: 0 6px 16px rgba(37, 99, 235, 0.6);
    }
    #nextjs-dashboard {
        width: 100%;
        height: 100vh;
        border: none;
        background: transparent;
    }
    .loading-spinner {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        z-index: 10;
    }
    .spinner {
        width: 50px;
        height: 50px;
        border: 4px solid #333;
        border-top: 4px solid #2563eb;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }
    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    .fallback-dashboard {
        display: none;
        padding: 40px;
        text-align: center;
    }
    .fallback-card {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        padding: 30px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        max-width: 600px;
        margin: 0 auto;
    }
</style>

<div class="dashboard-container">
    <!-- Settings Button -->
    <button class="settings-btn" id="settingsBtn" title="Settings">
        ‚öôÔ∏è
    </button>

    <!-- Loading Indicator -->
    <div class="loading-spinner" id="loadingSpinner">
        <div class="spinner"></div>
        <p>Loading Dashboard...</p>
    </div>

    <!-- Next.js Dashboard iframe -->
    <iframe id="nextjs-dashboard" 
            src="http://localhost:3000/dashboard" 
            style="display: none;">
    </iframe>

    <!-- Fallback Dashboard -->
    <div class="fallback-dashboard" id="fallbackDashboard">
        <div class="fallback-card">
            <h2>üìä Lead Processing Dashboard</h2>
            <p>The Next.js dashboard is currently unavailable. Please ensure the frontend server is running.</p>
            <div class="mt-4">
                <p><strong>To start the frontend:</strong></p>
                <code>cd FrontEnd && npm run dev</code>
            </div>
            <div class="mt-4">
                <a href="/api/v1/leads/metrics" class="btn btn-primary">View Raw Metrics</a>
                <a href="/hangfire" class="btn btn-secondary">Job Monitor</a>
                <a href="/" class="btn btn-outline-light">Back to Home</a>
            </div>
        </div>
    </div>

    <!-- Settings Modal Placeholder -->
    <div id="settings-modal-container"></div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const iframe = document.getElementById('nextjs-dashboard');
    const loadingSpinner = document.getElementById('loadingSpinner');
    const fallbackDashboard = document.getElementById('fallbackDashboard');
    const settingsBtn = document.getElementById('settingsBtn');
    
    // Handle iframe loading
    iframe.onload = function() {
        loadingSpinner.style.display = 'none';
        iframe.style.display = 'block';
        console.log('Next.js dashboard loaded successfully');
    };
    
    // Handle iframe error
    iframe.onerror = function() {
        loadingSpinner.style.display = 'none';
        fallbackDashboard.style.display = 'block';
        console.error('Failed to load Next.js dashboard');
    };
    
    // Timeout fallback (if iframe doesn't load within 10 seconds)
    setTimeout(function() {
        if (iframe.style.display === 'none') {
            loadingSpinner.style.display = 'none';
            fallbackDashboard.style.display = 'block';
            console.warn('Next.js dashboard load timeout - showing fallback');
        }
    }, 10000);
    
    // Settings button click handler
    settingsBtn.addEventListener('click', function() {
        // Try to communicate with Next.js iframe first
        try {
            iframe.contentWindow.postMessage({ type: 'OPEN_SETTINGS' }, 'http://localhost:3000');
            console.log('Sent settings open message to Next.js dashboard');
        } catch (e) {
            console.warn('Could not communicate with Next.js dashboard, opening fallback settings');
            // Fallback: redirect to MVC settings page
            window.location.href = '/Settings';
        }
    });
    
    // Listen for messages from Next.js iframe
    window.addEventListener('message', function(event) {
        if (event.origin !== 'http://localhost:3000') return;
        
        console.log('Received message from Next.js:', event.data);
        
        if (event.data.type === 'DASHBOARD_READY') {
            loadingSpinner.style.display = 'none';
            iframe.style.display = 'block';
        }
    });
});
</script>