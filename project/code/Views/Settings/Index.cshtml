@model SettingsViewModel
@{
    ViewData["Title"] = "Settings";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>‚öôÔ∏è Settings</h2>
                <small class="text-muted">Configure workflow processing and API integrations</small>
            </div>

            <!-- Toast container -->
            <div class="toast-container position-fixed top-0 end-0 p-3">
                <div id="settingsToast" class="toast" role="alert">
                    <div class="toast-header">
                        <strong class="me-auto">Settings</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body" id="toastMessage">
                        <!-- Message will be set by JavaScript -->
                    </div>
                </div>
            </div>

            <!-- Settings Tabs -->
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs" id="settingsTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="workflow-tab" data-bs-toggle="tab" 
                                    data-bs-target="#workflow-settings" type="button" role="tab">
                                üîÑ Workflow Configuration
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="api-tab" data-bs-toggle="tab" 
                                    data-bs-target="#api-settings" type="button" role="tab">
                                üîë API Keys
                            </button>
                        </li>
                    </ul>
                </div>

                <div class="card-body">
                    <div class="tab-content" id="settingsTabContent">
                        <!-- Workflow Settings Tab -->
                        <div class="tab-pane fade show active" id="workflow-settings" role="tabpanel">
                            <h5 class="mb-3">Parallel Processing Configuration</h5>
                            <p class="text-muted mb-4">Configure the number of simultaneous processes for each workflow step. Higher numbers increase throughput but use more system resources.</p>

                            <form id="workflowSettingsForm">
                                @Html.AntiForgeryToken()
                                <div class="row">
                                    <div class="col-md-6 col-lg-3 mb-3">
                                        <label for="enrichmentProcessCount" class="form-label">
                                            üìä Data Enrichment
                                        </label>
                                        <input type="number" class="form-control" id="enrichmentProcessCount" 
                                               name="enrichmentProcessCount" value="@Model.WorkflowSettings.EnrichmentProcessCount" 
                                               min="1" max="100" required>
                                        <div class="form-text">Parallel enrichment processes (1-100)</div>
                                    </div>

                                    <div class="col-md-6 col-lg-3 mb-3">
                                        <label for="vettingProcessCount" class="form-label">
                                            ‚úÖ Lead Vetting
                                        </label>
                                        <input type="number" class="form-control" id="vettingProcessCount" 
                                               name="vettingProcessCount" value="@Model.WorkflowSettings.VettingProcessCount" 
                                               min="1" max="100" required>
                                        <div class="form-text">Parallel vetting processes (1-100)</div>
                                    </div>

                                    <div class="col-md-6 col-lg-3 mb-3">
                                        <label for="scoringProcessCount" class="form-label">
                                            üéØ Lead Scoring
                                        </label>
                                        <input type="number" class="form-control" id="scoringProcessCount" 
                                               name="scoringProcessCount" value="@Model.WorkflowSettings.ScoringProcessCount" 
                                               min="1" max="100" required>
                                        <div class="form-text">Parallel scoring processes (1-100)</div>
                                    </div>

                                    <div class="col-md-6 col-lg-3 mb-3">
                                        <label for="crmUpdateProcessCount" class="form-label">
                                            üìà CRM Updates
                                        </label>
                                        <input type="number" class="form-control" id="crmUpdateProcessCount" 
                                               name="crmUpdateProcessCount" value="@Model.WorkflowSettings.CrmUpdateProcessCount" 
                                               min="1" max="100" required>
                                        <div class="form-text">Parallel CRM update processes (1-100)</div>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-between align-items-center mt-4">
                                    <div>
                                        <button type="submit" class="btn btn-primary me-2">
                                            üíæ Save Workflow Settings
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary" onclick="resetWorkflowDefaults()">
                                            üîÑ Reset to Defaults
                                        </button>
                                    </div>
                                    <small class="text-muted">
                                        Last modified: @Model.WorkflowSettings.ModifiedDate.ToString("yyyy-MM-dd HH:mm:ss UTC")
                                    </small>
                                </div>
                            </form>
                        </div>

                        <!-- API Settings Tab -->
                        <div class="tab-pane fade" id="api-settings" role="tabpanel">
                            <h5 class="mb-3">External Service API Configuration</h5>
                            <p class="text-muted mb-4">Configure API keys for external services. Leave blank to continue using fake data for development.</p>

                            <form id="apiSettingsForm">
                                @Html.AntiForgeryToken()
                                <!-- Global Settings -->
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h6 class="card-title mb-0">üåê Global Settings</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" role="switch" 
                                                   id="useFakeData" name="useFakeData" @(Model.ApiConfiguration.UseFakeData ? "checked" : "")>
                                            <label class="form-check-label" for="useFakeData">
                                                Use Fake Data (Development Mode)
                                            </label>
                                            <div class="form-text">When enabled, the system will use fake data instead of calling external APIs, even if API keys are provided.</div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Google Settings -->
                                <div class="card mb-3">
                                    <div class="card-header">
                                        <h6 class="card-title mb-0">
                                            üåê Google API Settings
                                            <span class="badge @(Model.ApiConfiguration.Google.IsConfigured ? "bg-success" : "bg-secondary") ms-2">
                                                @(Model.ApiConfiguration.Google.IsConfigured ? "Configured" : "Not Configured")
                                            </span>
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="googleApiKey" class="form-label">API Key</label>
                                                <input type="password" class="form-control" id="googleApiKey" name="googleApiKey" 
                                                       value="@Model.ApiConfiguration.Google.ApiKey" placeholder="Enter Google Places API key">
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="googleCustomSearchEngineId" class="form-label">Custom Search Engine ID</label>
                                                <input type="text" class="form-control" id="googleCustomSearchEngineId" name="googleCustomSearchEngineId" 
                                                       value="@Model.ApiConfiguration.Google.CustomSearchEngineId" placeholder="Enter Custom Search Engine ID">
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Facebook Settings -->
                                <div class="card mb-3">
                                    <div class="card-header">
                                        <h6 class="card-title mb-0">
                                            üìò Facebook API Settings
                                            <span class="badge @(Model.ApiConfiguration.Facebook.IsConfigured ? "bg-success" : "bg-secondary") ms-2">
                                                @(Model.ApiConfiguration.Facebook.IsConfigured ? "Configured" : "Not Configured")
                                            </span>
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-4 mb-3">
                                                <label for="facebookAccessToken" class="form-label">Access Token</label>
                                                <input type="password" class="form-control" id="facebookAccessToken" name="facebookAccessToken" 
                                                       value="@Model.ApiConfiguration.Facebook.AccessToken" placeholder="Enter Facebook access token">
                                            </div>
                                            <div class="col-md-4 mb-3">
                                                <label for="facebookAppId" class="form-label">App ID</label>
                                                <input type="text" class="form-control" id="facebookAppId" name="facebookAppId" 
                                                       value="@Model.ApiConfiguration.Facebook.AppId" placeholder="Enter Facebook App ID">
                                            </div>
                                            <div class="col-md-4 mb-3">
                                                <label for="facebookAppSecret" class="form-label">App Secret</label>
                                                <input type="password" class="form-control" id="facebookAppSecret" name="facebookAppSecret" 
                                                       value="@Model.ApiConfiguration.Facebook.AppSecret" placeholder="Enter Facebook App Secret">
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- LinkedIn Settings -->
                                <div class="card mb-3">
                                    <div class="card-header">
                                        <h6 class="card-title mb-0">
                                            üíº LinkedIn API Settings
                                            <span class="badge @(Model.ApiConfiguration.LinkedIn.IsConfigured ? "bg-success" : "bg-secondary") ms-2">
                                                @(Model.ApiConfiguration.LinkedIn.IsConfigured ? "Configured" : "Not Configured")
                                            </span>
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-4 mb-3">
                                                <label for="linkedInAccessToken" class="form-label">Access Token</label>
                                                <input type="password" class="form-control" id="linkedInAccessToken" name="linkedInAccessToken" 
                                                       value="@Model.ApiConfiguration.LinkedIn.AccessToken" placeholder="Enter LinkedIn access token">
                                            </div>
                                            <div class="col-md-4 mb-3">
                                                <label for="linkedInClientId" class="form-label">Client ID</label>
                                                <input type="text" class="form-control" id="linkedInClientId" name="linkedInClientId" 
                                                       value="@Model.ApiConfiguration.LinkedIn.ClientId" placeholder="Enter LinkedIn Client ID">
                                            </div>
                                            <div class="col-md-4 mb-3">
                                                <label for="linkedInClientSecret" class="form-label">Client Secret</label>
                                                <input type="password" class="form-control" id="linkedInClientSecret" name="linkedInClientSecret" 
                                                       value="@Model.ApiConfiguration.LinkedIn.ClientSecret" placeholder="Enter LinkedIn Client Secret">
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- YellowPages Settings -->
                                <div class="card mb-3">
                                    <div class="card-header">
                                        <h6 class="card-title mb-0">
                                            üìû SuperPages/YellowPages API Settings
                                            <span class="badge @(Model.ApiConfiguration.YellowPages.IsConfigured ? "bg-success" : "bg-secondary") ms-2">
                                                @(Model.ApiConfiguration.YellowPages.IsConfigured ? "Configured" : "Not Configured")
                                            </span>
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="yellowPagesApiKey" class="form-label">API Key</label>
                                                <input type="password" class="form-control" id="yellowPagesApiKey" name="yellowPagesApiKey" 
                                                       value="@Model.ApiConfiguration.YellowPages.ApiKey" placeholder="Enter YellowPages API key">
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="yellowPagesPublisherId" class="form-label">Publisher ID</label>
                                                <input type="text" class="form-control" id="yellowPagesPublisherId" name="yellowPagesPublisherId" 
                                                       value="@Model.ApiConfiguration.YellowPages.PublisherId" placeholder="Enter Publisher ID">
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Zoho CRM Settings -->
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h6 class="card-title mb-0">
                                            üìä Zoho CRM API Settings
                                            <span class="badge @(Model.ApiConfiguration.Zoho.IsConfigured ? "bg-success" : "bg-secondary") ms-2">
                                                @(Model.ApiConfiguration.Zoho.IsConfigured ? "Configured" : "Not Configured")
                                            </span>
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="zohoAccessToken" class="form-label">Access Token</label>
                                                <input type="password" class="form-control" id="zohoAccessToken" name="zohoAccessToken" 
                                                       value="@Model.ApiConfiguration.Zoho.AccessToken" placeholder="Enter Zoho access token">
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="zohoRefreshToken" class="form-label">Refresh Token</label>
                                                <input type="password" class="form-control" id="zohoRefreshToken" name="zohoRefreshToken" 
                                                       value="@Model.ApiConfiguration.Zoho.RefreshToken" placeholder="Enter Zoho refresh token">
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="zohoClientId" class="form-label">Client ID</label>
                                                <input type="text" class="form-control" id="zohoClientId" name="zohoClientId" 
                                                       value="@Model.ApiConfiguration.Zoho.ClientId" placeholder="Enter Zoho Client ID">
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="zohoClientSecret" class="form-label">Client Secret</label>
                                                <input type="password" class="form-control" id="zohoClientSecret" name="zohoClientSecret" 
                                                       value="@Model.ApiConfiguration.Zoho.ClientSecret" placeholder="Enter Zoho Client Secret">
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <button type="submit" class="btn btn-primary me-2">
                                            üîë Save API Configuration
                                        </button>
                                        <button type="button" class="btn btn-outline-warning" onclick="clearApiKeys()">
                                            üóëÔ∏è Clear All Keys
                                        </button>
                                    </div>
                                    <div class="text-end">
                                        <small class="text-muted d-block">üí° API keys are encrypted and stored securely</small>
                                        <small class="text-muted">Changes take effect immediately</small>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize Bootstrap tabs
            var triggerTabList = [].slice.call(document.querySelectorAll('#settingsTabs button'));
            triggerTabList.forEach(function (triggerEl) {
                var tabTrigger = new bootstrap.Tab(triggerEl);
            });

            // Handle workflow settings form submission
            $('#workflowSettingsForm').on('submit', function(e) {
                e.preventDefault();
                
                var formData = {
                    enrichmentProcessCount: $('#enrichmentProcessCount').val(),
                    vettingProcessCount: $('#vettingProcessCount').val(),
                    scoringProcessCount: $('#scoringProcessCount').val(),
                    crmUpdateProcessCount: $('#crmUpdateProcessCount').val()
                };

                $.ajax({
                    url: '@Url.Action("UpdateWorkflowSettings", "Settings")',
                    type: 'POST',
                    data: formData,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast(response.message, 'success');
                            // Update the last modified timestamp
                            setTimeout(function() {
                                location.reload();
                            }, 1500);
                        } else {
                            showToast(response.message, 'error');
                        }
                    },
                    error: function() {
                        showToast('An error occurred while saving workflow settings.', 'error');
                    }
                });
            });

            // Handle API settings form submission
            $('#apiSettingsForm').on('submit', function(e) {
                e.preventDefault();
                
                var formData = {
                    useFakeData: $('#useFakeData').is(':checked'),
                    googleApiKey: $('#googleApiKey').val(),
                    googleCustomSearchEngineId: $('#googleCustomSearchEngineId').val(),
                    facebookAccessToken: $('#facebookAccessToken').val(),
                    facebookAppId: $('#facebookAppId').val(),
                    facebookAppSecret: $('#facebookAppSecret').val(),
                    linkedInAccessToken: $('#linkedInAccessToken').val(),
                    linkedInClientId: $('#linkedInClientId').val(),
                    linkedInClientSecret: $('#linkedInClientSecret').val(),
                    yellowPagesApiKey: $('#yellowPagesApiKey').val(),
                    yellowPagesPublisherId: $('#yellowPagesPublisherId').val(),
                    zohoAccessToken: $('#zohoAccessToken').val(),
                    zohoRefreshToken: $('#zohoRefreshToken').val(),
                    zohoClientId: $('#zohoClientId').val(),
                    zohoClientSecret: $('#zohoClientSecret').val()
                };

                $.ajax({
                    url: '@Url.Action("UpdateApiKeys", "Settings")',
                    type: 'POST',
                    data: formData,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast(response.message, 'success');
                        } else {
                            showToast(response.message, 'error');
                        }
                    },
                    error: function() {
                        showToast('An error occurred while saving API configuration.', 'error');
                    }
                });
            });
        });

        // Helper function to show toast messages
        function showToast(message, type) {
            $('#toastMessage').text(message);
            
            var toastEl = document.getElementById('settingsToast');
            var toast = new bootstrap.Toast(toastEl);
            
            // Set color based on type
            toastEl.className = toastEl.className.replace(/text-\w+/g, '');
            if (type === 'success') {
                toastEl.classList.add('text-success');
            } else if (type === 'error') {
                toastEl.classList.add('text-danger');
            }
            
            toast.show();
        }

        // Reset workflow settings to defaults
        function resetWorkflowDefaults() {
            $('#enrichmentProcessCount').val(10);
            $('#vettingProcessCount').val(10);
            $('#scoringProcessCount').val(10);
            $('#crmUpdateProcessCount').val(10);
        }

        // Clear all API keys
        function clearApiKeys() {
            if (confirm('Are you sure you want to clear all API keys? This will reset all external integrations to use fake data.')) {
                $('input[type="password"], input[name$="AccessToken"], input[name$="ApiKey"], input[name$="Secret"], input[name$="ClientId"]').val('');
                showToast('All API keys have been cleared. Click "Save API Configuration" to apply changes.', 'success');
            }
        }
    </script>
}